{"home":{"content":"# Lecture 8: Frontend Frameworks\n\nGridz on gridz on gridz, fam\n\n![grdis](https://media1.giphy.com/media/3o85xA30i7z1LUIISY/giphy.gif)\n\n## Learning Objectives\n\n1. Understand how to build multilayered grids with a Front-End Framework\n2. Understand how we can override the default styles of a framework with our own CSS\n\n## To Do List\n\n#### [Frontend Frameworks](#frontend-frameworks)\n#### [Grids](#grids)\n#### [Resume Lab](#resume-lab)\n#### (Time Permitting)\n#### [Styling for various Screens](#styling-for-various-screens)\n\n## [HOMEWORK](https://github.com/FEWDMaterials/FEWD_Developer_Matchmaker)\n\nDon't forget, hw is due on Tuesday August 1st, 2017. ","idx":0},"title":{"content":"Lecture 8: Frontend Frameworks","idx":1},"desc":{"content":"FE frameworks and grids","idx":2},"frontend-frameworks":{"content":"# Frontend Frameworks\n---\n\n**Learning Objective**: What are front-end frameworks and how do they allow us to create modern, professional looking websites?\n\n#### Exercise\n---\n\nLet's get a simple site going that pulls in one of the following frameworks. Let's then use the documentation to build out a simple UI element using that framework.\n\n---\n\nFrameworks are basically CSS stylesheets that were developed by other people. They are built in such a way that you don't have to spend time and energy building out commonly reusable components like **buttons** and **input fields**, etc\n\n#### Semantic UI\n---\nSome quick facts:\n\n* They write the CSS and HTML blocks for you, all you do is copy and paste\n* With a basic understanding of HTML/CSS, you can easily start building professional looking websites\n\n**Visit their [website](http://semantic-ui.com/).**\n\n**Read the [docs](http://semantic-ui.com/introduction/getting-started.html).**\n\n#### Material Design\n---\nSome quick facts:\n\n* Built by Google.\n* Follows the Material Design spec that a lot of new Google apps now implement (like Google Calendar, Google Inbox, etc).\n\n**Visit their [website](https://getmdl.io/).**\n\n#### Bootstrap\n---\n\nSome quick facts:\n\n* Built by your boys over @twitter, it is a framework for quickly building out complex webpages\n* Probably **the** most popular front-end framework.\n\n**Visit their [website](http://getbootstrap.com/).**\n\n**Read the [docs](http://getbootstrap.com/getting-started/).**\n\n#### Primer\n---\n\nSome quick facts:\n\n* Build by your boys over @github\n* Much simpler than bootstrap\n* Lighter weight too!\n\n**Visit their [website](http://primercss.io/).**\n","idx":3},"grids":{"content":"# Grids\n---\n\n**Learning Objective**: How can we assemble useful grid layouts with a front-end framework?\n\n#### Exercise\n---\n\nLet's see if we can rebuild our layouts using a frontend framework.\n\nCreate a [new project](http://fewdmaterials.github.io/boilerplates/) and then using the documentation provided by your chosen frontend framework, rebuild the following layouts. \n\n**NOTE**: you will likely have to add some of your own CSS styles here as well to achieve the gray boxes and min-heights.\n\n#### Simple Layout\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout1.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout1.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n\n<p></p><p></p>\n\n#### Three Column Layout\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout2.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout2.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n<p></p><p></p>\n\n\n\n#### Simple Marketing\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout3.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout3.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n<p></p><p></p>\n\n\n#### Marketing with Nav\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout4.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout4.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n<p></p><p></p>\n\n\n\n#### Magazine\n\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout5.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout5.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n<p></p><p></p>","idx":4},"resume-lab":{"content":"# Resume Lab\n---\n\n**Learning Objective**: How can we build a professional looking website with a frontend framework?\n\n#### Exercise\n---\n\nLet's revisit our resume page. We will create a resume webpage using Semantic UI.\n\n---\n\n#### Requirements\n\nOpen ended! Let's have fun with this and use our exploration as an excuse to learn more about the modules offered by Semantic UI.\n","idx":5},"styling-for-various-screens":{"content":"# Styling for various Screens\n---\n\n**Learning Objective**: Understand how to apply CSS towards building web layouts that work in multiple screens.\n\n#### Exercise\n---\n\nRefactor your resume website so that it looks good and accessible on mobile screens. This usually means setting a smaller width on your content and perhaps updating font sizes. If you have an column grids you will probably want to stack them.\n\n---\n\nWe can write CSS that will allow us to format our data layouts so that it adheres properly to multiple screen sizes.\n\n#### Basics\n---\n* We want to have the SAME markup for ALL of our webviews\n* A website is responsive if the site layout changes based on the width of the browser pages but can compensate for any width.\n* A website is adaptive if the site layout changes based on the width of the browser but only for predetermined widths.\n* [Examples](http://socialdriver.com/2013/06/10/50-best-responsive-website-design-examples-of-2013/) of responsive sites\n* Always place this in your HTML\n\n```html\n<html>\n    <head>\n        ...\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0;\">\n        ...\n    </head>\n    ...\n</html>\n```\n\n#### Mobile First VS. Desktop First\n---\nThese two schemas are techniques for how we structure our css.\n\n**Most important takeaway**: almost always go with mobile first.\n\n \n* Remember, CSS is cascading which means that we can write one set of styles and then reapply other styles on top of that.\n\n#### Mobile First\n\nWith mobile first, we create the mobile layout first, then add a media query for tablet (with tablet styles) and then add a media query for desktop (with desktop styles)\n\n#### Desktop First\n\nWith desktop first, we create the desktop layout first (so styles for desktop), then add a media query for tablet, then mobile.\n\n#### Mobile First > Desktop First\n**Here's why**:\nforces you to think about the stuff that's really necessary for simplest version of your page and implement those\n\n\n* With mobile first, you simply add styles as needed as width increases (vs removing styles the other way around, which leads to writing more code)\n\n#### Examples\n---\nHere are some examples of different media queries.\n\n* #### [Basic Example; Mobile first](http://fewd.us/howdoi/#/problem/4080)\n\n* #### [Basic; Desktop first](http://fewd.us/howdoi/#/problem/4081)\n\n* #### [AND-ing](http://fewd.us/howdoi/#/problem/4082)\n\n* #### [OR-ing](http://fewd.us/howdoi/#/problem/4083)\n\n* #### [Buckets](http://fewd.us/howdoi/#/problem/4084)\n\n* #### [Overriding](http://fewd.us/howdoi/#/problem/4085)\n\n#### Common Breakpoints\n---\n**NOTE**: you should **NEVER** design for device specificity. Read [this](https://responsivedesign.is/articles/why-you-dont-need-device-specific-breakpoints).\n\n```css\n/* Smartphones (portrait and landscape) ----------- */\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) {\n/* Styles */\n}\n\n/* Smartphones (landscape) ----------- */\n@media only screen and (min-width : 321px) {\n/* Styles */\n}\n\n/* Smartphones (portrait) ----------- */\n@media only screen and (max-width : 320px) {\n/* Styles */\n}\n\n/* iPads (portrait and landscape) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) {\n/* Styles */\n}\n\n/* iPads (landscape) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) {\n/* Styles */\n}\n\n/* iPads (portrait) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) {\n/* Styles */\n}\n/**********\niPad 3\n**********/\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n/* Desktops and laptops ----------- */\n@media only screen  and (min-width : 1224px) {\n/* Styles */\n}\n\n/* Large screens ----------- */\n@media only screen  and (min-width : 1824px) {\n/* Styles */\n}\n\n/* iPhone 4 ----------- */\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n/* iPhone 5 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* iPhone 6 ----------- */\n@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* iPhone 6+ ----------- */\n@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* Samsung Galaxy S3 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* Samsung Galaxy S4 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n/* Samsung Galaxy S5 ----------- */\n@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n```\n","idx":6},"__list__":["home","title","desc","frontend-frameworks","grids","resume-lab","styling-for-various-screens"]}